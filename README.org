#+TITLE: PSOrgMode - A module for reading and writing org-mode format

* ConvertFrom-OrgMode
This is the main entry into the module functions.  It converts org-mode
formatted text into PowerShell objects.
`ConvertFrom-OrgMode` parses text input, identifying elements and building an object
hierarchy that represents the /document/.  Some "important" elements have their own
Convert* functions, such as *headline* and *timestamp*.

* OrgMode components
As much as possible, `ConvertFrom-OrgMode` follows the org-element.el parser.
A fundemental concept of the original org-mode parser is that all components
are grouped into three categories:
- Elements :: An Element has a Type, Properties, and Content.
- Greater-Elements :: While still technically the same, these Elements only
contain other elements, and are treated 'special' by the org-element-parser.
- Objects :: Components that effect their content, but do not contain other
components.  For example, marking text as bold.

* OrgElement
ConvertFrom-OrgMode and many other functions use an OrgElement object.  Again,
trying to follow the concepts in the org-element parser, an OrgElement has:
- Type : an OrgType enum that identifies the type of Element, such as headline,
section, src_block, etc.
- Properties :: A collection of OrgProperty objects.  There are several Cmdlets
for working with OrgProperty objects.
- Children :: A collection of OrgElements that are part of this one.  For example,
a level 1 Headline could have several  level 2 Headlines below it, as well as sections,
src_blocks, etc.
- Parent :: A reference to the OrgElement "up" the tree.
* OrgProperty
Because the Property system is so powerful, they have their own class.  They
are an intrinsic part of OrgElement, so every other Element type has them as
well.
**  Managing Properties
- New-OrgProperty
- Test-OrgProperty
* OrgHeadline
Almost anything useful in an orgmode file has to do with headlines.  An OrgHeadline
inherets from OrgElement, and adds additional fields, such as Level, State,
Priority, Title, and Tags.
Because there are so many fields, and so many combinations of optional components
of a headline, `ConvertFrom-OrgHeadline` is a specialized parser just for them.
* OrgTimestamp
So much information goes into a timestamp in orgmode.  Besides a Date, it can
be Active or Inactive, have time information, it can be a timespan (meaning A
start date/time and an end date/time), Planning information (Scheduled, Deadline,
or Closed), and depending on the type, can have either Delay, Warning, or Repeat
interval information.
`ConvertFrom-OrgTimeStamp` handles all of these fields and returns an OrgTimeStamp
